services:
  redis:
    extends:
      file: docker-compose.services.yml
      service: redis
    networks:
      - p2p-main
  rabbitmq:
    extends:
      file: docker-compose.services.yml
      service: rabbitmq
    networks:
      - p2p-main
    ports:
      - '5671-5672:5672'
      - '15671-15672:15672'
      - '15691-15692:15692'
    deploy:
      replicas: 2
  clickhouse:
    extends:
      file: docker-compose.services.yml
      service: clickhouse
    networks:
      - p2p-main
  # grafana:
  #   extends:
  #     file: docker-compose.services.yml
  #     service: grafana
  #   networks:
  #     - p2p-main
  # clickhouse-exporter:
  #   extends:
  #     file: docker-compose.services.yml
  #     service: clickhouse_exporter
  #   # environment:
  #     # - CLICKHOUSE_USER=default
  #     # - CLICKHOUSE_PASSWORD=
  #   networks:
  #     - p2p-main
  # elasticsearch:
  #   extends:
  #     file: docker-compose.services.yml
  #     service: elasticsearch
  #   networks:
  #     - p2p-main
  # elasticsearch_exporter:
  #   extends:
  #     file: docker-compose.services.yml
  #     service: elasticsearch_exporter
  #   networks:
  #     - p2p-main
  # prometheus:
  #   extends:
  #     file: docker-compose.services.yml
  #     service: prometheus
  #   networks:
  #     - p2p-main
  proxy-manager:
    extends:
      file: docker-compose.services.yml
      service: proxy-manager
    ports:
      - '3100:3001'
    networks:
      - p2p-main
  # web:
  #   build:
  #     context: ./entries/web
  #     dockerfile: Dockerfile
  #   container_name: web
  #   image: registry.gitlab.com/p2p-scanner/web:master
  #   depends_on:
  #     - clickhouse
  #     - rabbitmq
  #   restart: always
  #   env_file: 
  #     - .env
  #   environment:
  #     - NODE_ENV=production
  #   deploy:
  #     replicas: 1
  #   volumes:
  #     - ./entries/web:/app/src
  #     - cache:/app/var/cache
  #   ports:
  #     - '3000:3000'
  #   networks:
  #     - p2p-main
  # data-saver:
  #   build:
  #     context: ./entries/data-saver
  #     dockerfile: Dockerfile
  #   container_name: data-saver
  #   image: registry.gitlab.com/p2p-scanner/data-saver:master
  #   depends_on:
  #     - proxy-manager
  #     - clickhouse
  #     - rabbitmq
  #     - scannermain
  #   restart: always
  #   env_file: 
  #     - .env
  #   environment:
  #     - NODE_ENV=production
  #   deploy:
  #     replicas: 1
  #   volumes:
  #     - ./src:/app/src
  #     - cache:/app/var/cache
  #   networks:
  #     - p2p-main
  # telegram-notify:
  #   build:
  #     context: ./entries/telegram-notify
  #     dockerfile: Dockerfile
  #   container_name: telegram-notify
  #   image: registry.gitlab.com/p2p-scanner/telegram-notify:master
  #   restart: always
  #   env_file: 
  #     - .env
  #   environment:
  #     - NODE_ENV=production
  #   deploy:
  #     replicas: 1
  #   volumes:
  #     - ./src:/app/src
  #   networks:
  #     - p2p-main
  # connectors-maker:
  #   build:
  #     context: ./entries/connectors-maker
  #     dockerfile: Dockerfile
  #   image: registry.gitlab.com/p2p-scanner/connectors-maker:master
  #   depends_on:
  #     - clickhouse
  #     - rabbitmq
  #     - redis
  #   restart: always
  #   env_file: 
  #     - .env
  #   environment:
  #     - DISABLE_CRON=1
  #     - NODE_ENV=production
  #   deploy:
  #     replicas: 3
  #   volumes:
  #     - ./src:/app/src
  #     - cache:/app/var/cache
  #   ports:
  #     - '2990-2995:2995'
  #   networks:
  #     - p2p-main
  # connectors-maker-main:
  #   build:
  #     context: ./entries/connectors-maker
  #     dockerfile: Dockerfile
  #   image: registry.gitlab.com/p2p-scanner/connectors-maker:master
  #   depends_on:
  #     - clickhouse
  #     - rabbitmq
  #     - redis
  #   restart: always
  #   env_file: 
  #     - .env
  #   environment:
  #     - NODE_ENV=production
  #   deploy:
  #     replicas: 1
  #   volumes:
  #     - ./src:/app/src
  #     - cache:/app/var/cache
  #   ports:
  #     - 2995:2995
  #   networks:
  #     - p2p-main
  # scannermain:
  #   container_name: scanner-main
  #   build:
  #     context: ./entries/scanner
  #     dockerfile: Dockerfile
  #   image: registry.gitlab.com/p2p-scanner/scanner:master
  #   depends_on:
  #     - clickhouse
  #     - rabbitmq
  #   restart: always
  #   env_file: 
  #     - .env
  #     - env/.env.binance
  #     - env/.env.bybit
  #     - env/.env.gateio
  #     - env/.env.mexc
  #   ports:
  #     - '3990:3000'
  #   environment:
  #     - NODE_ENV=production
  #     - QUEUE_LIMIT=200
  #     - CI_PROJECT_ID=49083682
  #     - CI_JOB_TOKEN=glpat-4BLn3gaVoLXBpss73P1f
  #   networks:
  #     - p2p-main
  # scanner:
  #   build:
  #     context: ./entries/scanner
  #     dockerfile: Dockerfile
  #   image: registry.gitlab.com/p2p-scanner/scanner:master
  #   depends_on:
  #     - clickhouse
  #     - rabbitmq
  #   restart: always
  #   env_file: 
  #     - .env
  #     - env/.env.binance
  #     - env/.env.bybit
  #     - env/.env.gateio
  #     - env/.env.mexc
  #   ports:
  #     - '3991-3995:3200'
  #   networks:
  #     - p2p-main
  #   environment:
  #     - NODE_ENV=production
  #     - QUEUE_LIMIT=300
  #     - CI_PROJECT_ID=49083682
  #     - CI_JOB_TOKEN=glpat-4BLn3gaVoLXBpss73P1f
  #   deploy:
  #     replicas: 4
  dexscannermain:
    container_name: dex-scanner-main
    build:
      context: ./entries/dex-scanner
      dockerfile: Dockerfile
    image: registry.gitlab.com/p2p-scanner/dex-scanner:master
    depends_on:
      - clickhouse
      - rabbitmq
    restart: always
    env_file: 
      - .env
    ports:
      - '3980:3000'
    environment:
      - NODE_ENV=production
      - QUEUE_LIMIT=200
      - CI_PROJECT_ID=49083682
      - CI_JOB_TOKEN=glpat-4BLn3gaVoLXBpss73P1f
    networks:
      - p2p-main
  dexscanner:
    build:
      context: ./entries/scanner
      dockerfile: Dockerfile
    image: registry.gitlab.com/p2p-scanner/dex-scanner:master
    depends_on:
      - clickhouse
      - rabbitmq
    restart: always
    env_file: 
      - .env
    ports:
      - '3981-3985:3200'
    networks:
      - p2p-main
    environment:
      - DISABLE_CRON=1
      - NODE_ENV=production
      - QUEUE_LIMIT=300
      - CI_PROJECT_ID=49083682
      - CI_JOB_TOKEN=glpat-4BLn3gaVoLXBpss73P1f
    deploy:
      replicas: 4
volumes:
  syncthing:
  p2p-clickhouse:
  cache:
  proxymanager:
networks:
  p2p-main:
